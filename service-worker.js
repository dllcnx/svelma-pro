!function(){"use strict";const e=["client/chunk.4b4ee497.js","client/index.856d8425.js","client/chunk.82446879.js","client/chunk.94a6e723.js","client/chunk.fb378401.js","client/chunk.b01e898f.js","client/colorpicker.ef7e0ca4.js","client/pagination.6fe395f5.js","client/carousel.b7047a3d.js","client/chunk.e8a2e241.js","client/timepicker.bdc70b9a.js","client/datepicker.9365cac2.js","client/snackbar.912224e2.js","client/district.01622b9f.js","client/progress.4e9860c8.js","client/message.91d66577.js","client/notification.76eb2821.js","client/layout.ab177a2a.js","client/select.ac2a8200.js","client/slider.77111ee0.js","client/collapse.8816a02c.js","client/dialog.9c49ed61.js","client/stable.207832c2.js","client/client.3704696d.js","client/modal.42c55509.js","client/switch.c11d6944.js","client/button.c40b2c4d.js","client/icon.8c03cabd.js","client/toast.9e2899d7.js","client/input.948fdcb3.js","client/tip.277ff470.js","client/about.27e035e2.js","client/intro.b52b4857.js","client/index.3e2262bb.js","client/nav.5b9f24d5.js","client/table.66528e37.js","client/media.2b2177b8.js","client/field.d31e142c.js","client/table.de46120a.js","client/tiles.32985126.js","client/tabs.9eb4ac2f.js","client/[slug].b8f32e13.js","client/index.6cf02bd4.js","client/hero.7ff2a4ee.js","client/chunk.f5a3f321.js"].concat(["service-worker-index.html","all.css","favicon.ico","favicon.png","global.css","great-success.png","logo-192.png","logo-512.png","manifest.json","stable.png","svelma-logo-ico.png","svelma-logo.png","svelma-logo.svg","webfonts/fa-brands-400.eot","webfonts/fa-brands-400.svg","webfonts/fa-brands-400.ttf","webfonts/fa-brands-400.woff","webfonts/fa-brands-400.woff2","webfonts/fa-regular-400.eot","webfonts/fa-regular-400.svg","webfonts/fa-regular-400.ttf","webfonts/fa-regular-400.woff","webfonts/fa-regular-400.woff2","webfonts/fa-solid-900.eot","webfonts/fa-solid-900.svg","webfonts/fa-solid-900.ttf","webfonts/fa-solid-900.woff","webfonts/fa-solid-900.woff2"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1617093983907").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1617093983907"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const s=new URL(e.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&t.has(s.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1617093983907").then(async t=>{try{const s=await fetch(e.request);return t.put(e.request,s.clone()),s}catch(s){const n=await t.match(e.request);if(n)return n;throw s}}))))})}();
